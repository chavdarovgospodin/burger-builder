{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\React\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\React\\\\burger-builder\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENT_PRICES = {\n  //GLOBAL CONSTANT\n  salad: 0.5,\n  bacon: 0.7,\n  cheese: 0.4,\n  meat: 1.3\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIgredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIgredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIgredients\n      });\n      this.updatePurchaseState(updatedIgredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n\n      const updatedIgredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIgredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIgredients\n      });\n      this.updatePurchaseState(updatedIgredients);\n    };\n\n    this.purchasedCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchasedContinueHandler = () => {\n      alert('Continue');\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients) // creates an array from object\n    .map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchasedCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(OrderSummary, {\n      continue: this.contit,\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      price: this.state.totalPrice,\n      purchasable: this.state.purchasable,\n      ordered: this.purchaseHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\Desktop\\React\\burger-builder\\src\\containers\\BurgerBuilder\\BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","INGREDIENT_PRICES","salad","bacon","cheese","meat","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","purchaseHandler","setState","addIngredientHandler","type","oldCount","updatedCount","updatedIgredients","priceAddition","oldPrice","newPrice","updatePurchaseState","removeIngredientHandler","priceDeduction","purchasedCancelHandler","purchasedContinueHandler","alert","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","contit"],"mappings":"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","sourcesContent":["import React ,{ Component } from 'react';\r\nimport Aux from '../../hoc/Aux';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\n\r\nconst INGREDIENT_PRICES = {  //GLOBAL CONSTANT\r\n    salad: 0.5,\r\n    bacon: 0.7,\r\n    cheese: 0.4,\r\n    meat: 1.3 \r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        totalPrice: 4,\r\n        purchasable: false,\r\n        purchasing: false\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    updatePurchaseState(ingredients) {\r\n        const sum = Object.keys(ingredients) // creates an array from object\r\n            .map(igKey => {\r\n                return ingredients[igKey]\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0) \r\n\r\n        this.setState({purchasable: sum>0});\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIgredients = {\r\n            ...this.state.ingredients\r\n        }\r\n\r\n        updatedIgredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIgredients});\r\n        this.updatePurchaseState(updatedIgredients);\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if (oldCount <= 0) {\r\n            return;\r\n        }\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIgredients = {\r\n            ...this.state.ingredients\r\n        }\r\n\r\n        updatedIgredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIgredients});\r\n        this.updatePurchaseState(updatedIgredients);\r\n    }\r\n\r\n    purchasedCancelHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchasedContinueHandler = () => {\r\n        alert('Continue');\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing}\r\n                modalClosed={this.purchasedCancelHandler}>\r\n                    <OrderSummary \r\n                    continue={this.contit}\r\n                    ingredients={this.state.ingredients}/>\r\n                </Modal>\r\n                <Burger ingredients = {this.state.ingredients}/>\r\n                <BuildControls\r\n                ingredientAdded = {this.addIngredientHandler}\r\n                ingredientRemoved = {this.removeIngredientHandler}\r\n                disabled={disabledInfo}\r\n                price={this.state.totalPrice}\r\n                purchasable={this.state.purchasable}\r\n                ordered={this.purchaseHandler}/>        \r\n             </Aux>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}