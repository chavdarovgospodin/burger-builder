{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\React\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\React\\\\burger-builder\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nconst INGREDIENT_PRICES = {\n  //GLOBAL CONSTANT\n  salad: 0.5,\n  bacon: 0.7,\n  cheese: 0.4,\n  meat: 1.3\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIgredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIgredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIgredients\n      });\n      this.updatePurchaseState(updatedIgredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n\n      const updatedIgredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIgredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIgredients\n      });\n      this.updatePurchaseState(updatedIgredients);\n    };\n\n    this.purchasedCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchasedContinueHandler = () => {\n      alert(\"Continue\");\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients) // creates an array from object\n    .map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchasedCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(OrderSummary, {\n      continue: this.purchasedContinueHandler,\n      cancel: this.purchasedCancelHandler,\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      price: this.state.totalPrice,\n      purchasable: this.state.purchasable,\n      ordered: this.purchaseHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\Desktop\\React\\burger-builder\\src\\containers\\BurgerBuilder\\BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","INGREDIENT_PRICES","salad","bacon","cheese","meat","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","purchaseHandler","setState","addIngredientHandler","type","oldCount","updatedCount","updatedIgredients","priceAddition","oldPrice","newPrice","updatePurchaseState","removeIngredientHandler","priceDeduction","purchasedCancelHandler","purchasedContinueHandler","alert","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/Aux\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\n\r\nconst INGREDIENT_PRICES = {\r\n  //GLOBAL CONSTANT\r\n  salad: 0.5,\r\n  bacon: 0.7,\r\n  cheese: 0.4,\r\n  meat: 1.3\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    ingredients: {\r\n      salad: 0,\r\n      bacon: 0,\r\n      cheese: 0,\r\n      meat: 0\r\n    },\r\n    totalPrice: 4,\r\n    purchasable: false,\r\n    purchasing: false\r\n  };\r\n\r\n  purchaseHandler = () => {\r\n    this.setState({ purchasing: true });\r\n  };\r\n\r\n  updatePurchaseState(ingredients) {\r\n    const sum = Object.keys(ingredients) // creates an array from object\r\n      .map(igKey => {\r\n        return ingredients[igKey];\r\n      })\r\n      .reduce((sum, el) => {\r\n        return sum + el;\r\n      }, 0);\r\n\r\n    this.setState({ purchasable: sum > 0 });\r\n  }\r\n\r\n  addIngredientHandler = type => {\r\n    const oldCount = this.state.ingredients[type];\r\n    const updatedCount = oldCount + 1;\r\n    const updatedIgredients = {\r\n      ...this.state.ingredients\r\n    };\r\n\r\n    updatedIgredients[type] = updatedCount;\r\n    const priceAddition = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice + priceAddition;\r\n    this.setState({ totalPrice: newPrice, ingredients: updatedIgredients });\r\n    this.updatePurchaseState(updatedIgredients);\r\n  };\r\n\r\n  removeIngredientHandler = type => {\r\n    const oldCount = this.state.ingredients[type];\r\n    if (oldCount <= 0) {\r\n      return;\r\n    }\r\n    const updatedCount = oldCount - 1;\r\n    const updatedIgredients = {\r\n      ...this.state.ingredients\r\n    };\r\n\r\n    updatedIgredients[type] = updatedCount;\r\n    const priceDeduction = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice - priceDeduction;\r\n    this.setState({ totalPrice: newPrice, ingredients: updatedIgredients });\r\n    this.updatePurchaseState(updatedIgredients);\r\n  };\r\n\r\n  purchasedCancelHandler = () => {\r\n    this.setState({ purchasing: false });\r\n  };\r\n\r\n  purchasedContinueHandler = () => {\r\n    alert(\"Continue\");\r\n  };\r\n\r\n  render() {\r\n    const disabledInfo = {\r\n      ...this.state.ingredients\r\n    };\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0;\r\n    }\r\n    return (\r\n      <Aux>\r\n        <Modal\r\n          show={this.state.purchasing}\r\n          modalClosed={this.purchasedCancelHandler}\r\n        >\r\n          <OrderSummary\r\n            continue={this.purchasedContinueHandler}\r\n            cancel={this.purchasedCancelHandler}\r\n            ingredients={this.state.ingredients}\r\n          />\r\n        </Modal>\r\n        <Burger ingredients={this.state.ingredients} />\r\n        <BuildControls\r\n          ingredientAdded={this.addIngredientHandler}\r\n          ingredientRemoved={this.removeIngredientHandler}\r\n          disabled={disabledInfo}\r\n          price={this.state.totalPrice}\r\n          purchasable={this.state.purchasable}\r\n          ordered={this.purchaseHandler}\r\n        />\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BurgerBuilder;\r\n"]},"metadata":{},"sourceType":"module"}