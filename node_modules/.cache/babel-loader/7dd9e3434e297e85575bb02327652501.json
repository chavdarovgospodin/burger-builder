{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\React\\\\burger-builder\\\\src\\\\components\\\\Burger\\\\BuildControls\\\\BuildControls.js\";\nimport React from 'react';\nimport classes from './BuildControls.css';\nimport BuildControl from './BuildControl/BuildControl';\nconst controls = [{\n  label: 'Salad',\n  type: 'salad'\n}, {\n  label: 'Bacon',\n  type: 'bacon'\n}, {\n  label: 'Cheese',\n  type: 'cheese'\n}, {\n  label: 'Meat',\n  type: 'meat'\n}];\n\nconst buildControls = props => React.createElement(\"div\", {\n  className: classes.BuildControls,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \"Current price: \", React.createElement(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, props.price.toFixed(2))), controls.map(ctrl => React.createElement(BuildControl, {\n  key: ctrl.label,\n  label: ctrl.label,\n  added: () => props.ingredientAdded(ctrl.type),\n  removed: () => props.ingredientRemoved(ctrl.type) // invoke the addIngredientHandler from BurgerBuilder and pass the type to it\n  ,\n  disabled: props.disabled[ctrl.type],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n})), React.createElement(\"button\", {\n  className: classes.OrderButton,\n  disabled: !props.purchasable,\n  onClick: props.ordered,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"ORDER NOW\"));\n\nexport default buildControls;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\Desktop\\React\\burger-builder\\src\\components\\Burger\\BuildControls\\BuildControls.js"],"names":["React","classes","BuildControl","controls","label","type","buildControls","props","BuildControls","price","toFixed","map","ctrl","ingredientAdded","ingredientRemoved","disabled","OrderButton","purchasable","ordered"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,MAAMC,QAAQ,GAAG,CACb;AAACC,EAAAA,KAAK,EAAE,OAAR;AAAiBC,EAAAA,IAAI,EAAE;AAAvB,CADa,EAEb;AAACD,EAAAA,KAAK,EAAE,OAAR;AAAiBC,EAAAA,IAAI,EAAE;AAAvB,CAFa,EAGb;AAACD,EAAAA,KAAK,EAAE,QAAR;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAHa,EAIb;AAACD,EAAAA,KAAK,EAAE,MAAR;AAAgBC,EAAAA,IAAI,EAAE;AAAtB,CAJa,CAAjB;;AAOA,MAAMC,aAAa,GAAIC,KAAD,IAClB;AAAK,EAAA,SAAS,EAAEN,OAAO,CAACO,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAASD,KAAK,CAACE,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAT,CAAlB,CADA,EAEKP,QAAQ,CAACQ,GAAT,CAAaC,IAAI,IACd,oBAAC,YAAD;AAAc,EAAA,GAAG,EAAGA,IAAI,CAACR,KAAzB;AACA,EAAA,KAAK,EAAEQ,IAAI,CAACR,KADZ;AAEA,EAAA,KAAK,EAAE,MAAIG,KAAK,CAACM,eAAN,CAAsBD,IAAI,CAACP,IAA3B,CAFX;AAGA,EAAA,OAAO,EAAE,MAAKE,KAAK,CAACO,iBAAN,CAAwBF,IAAI,CAACP,IAA7B,CAHd,CAGmD;AAHnD;AAIA,EAAA,QAAQ,EAAEE,KAAK,CAACQ,QAAN,CAAeH,IAAI,CAACP,IAApB,CAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADH,CAFL,EASI;AAAQ,EAAA,SAAS,EAAEJ,OAAO,CAACe,WAA3B;AACA,EAAA,QAAQ,EAAE,CAACT,KAAK,CAACU,WADjB;AAC8B,EAAA,OAAO,EAAEV,KAAK,CAACW,OAD7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATJ,CADJ;;AAeA,eAAeZ,aAAf","sourcesContent":["import React from 'react';\r\nimport classes from './BuildControls.css'\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'},\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n    <p>Current price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl =>(\r\n            <BuildControl key ={ctrl.label} \r\n            label={ctrl.label} \r\n            added={()=>props.ingredientAdded(ctrl.type)}\r\n            removed={()=> props.ingredientRemoved(ctrl.type)}  // invoke the addIngredientHandler from BurgerBuilder and pass the type to it\r\n            disabled={props.disabled[ctrl.type]}/>\r\n        ))}\r\n        <button className={classes.OrderButton}\r\n        disabled={!props.purchasable} onClick={props.ordered}>ORDER NOW</button>\r\n    </div>\r\n)\r\n\r\nexport default buildControls;"]},"metadata":{},"sourceType":"module"}