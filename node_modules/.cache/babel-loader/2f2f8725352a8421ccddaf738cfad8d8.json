{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\React\\\\burger-builder\\\\src\\\\components\\\\Burger\\\\Burger.js\";\nimport React from 'react';\nimport classes from './Burger.css';\nimport BurgerIngrediant from './BurgerIngredient/BurgerIngredient';\n\nconst burger = props => {\n  let transformedIngredients = Object.keys(props.ingredients).map(igKey => {\n    // eslint-disable-next-line array-callback-return\n    return [...Array(props.ingredients[igKey])].map((_, i) => {\n      // eslint-disable-next-line no-unused-expressions\n      return React.createElement(BurgerIngrediant, {\n        key: igKey + i,\n        type: igKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      });\n    });\n  }).reduce((arr, el) => {\n    return arr.concat(el);\n  }, []);\n\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Please start adding Ingredients\");\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.Burger,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(BurgerIngrediant, {\n    type: \"bread-top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), transformedIngredients, React.createElement(BurgerIngrediant, {\n    type: \"bread-bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n};\n\nexport default burger;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\Desktop\\React\\burger-builder\\src\\components\\Burger\\Burger.js"],"names":["React","classes","BurgerIngrediant","burger","props","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","reduce","arr","el","concat","length","Burger"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,MAAIC,sBAAsB,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,WAAlB,EACxBC,GADwB,CACpBC,KAAK,IAAI;AACV;AACA,WAAO,CAAC,GAAGC,KAAK,CAACP,KAAK,CAACI,WAAN,CAAkBE,KAAlB,CAAD,CAAT,EAAqCD,GAArC,CAAyC,CAACG,CAAD,EAAIC,CAAJ,KAAU;AACtD;AACF,aAAQ,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAGH,KAAK,GAAEG,CAA/B;AAAkC,QAAA,IAAI,EAAEH,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACD,KAHM,CAAP;AAIH,GAPwB,EAQxBI,MARwB,CAQjB,CAACC,GAAD,EAAMC,EAAN,KAAa;AACjB,WAAOD,GAAG,CAACE,MAAJ,CAAWD,EAAX,CAAP;AACH,GAVwB,EAUvB,EAVuB,CAA7B;;AAYI,MAAGX,sBAAsB,CAACa,MAAvB,KAAkC,CAArC,EAAwC;AACpCb,IAAAA,sBAAsB,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAzB;AACH;;AAEL,SACI;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACkB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKd,sBAFL,EAGI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CAxBD;;AA0BA,eAAeF,MAAf","sourcesContent":["import React from 'react';\r\nimport classes from './Burger.css'\r\nimport BurgerIngrediant from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            // eslint-disable-next-line array-callback-return\r\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n                // eslint-disable-next-line no-unused-expressions\r\n              return  <BurgerIngrediant key ={igKey +i} type={igKey} />\r\n            });\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el)   \r\n        },[]);\r\n        \r\n        if(transformedIngredients.length === 0) {\r\n            transformedIngredients = <p>Please start adding Ingredients</p>\r\n        }\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngrediant type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngrediant type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;"]},"metadata":{},"sourceType":"module"}